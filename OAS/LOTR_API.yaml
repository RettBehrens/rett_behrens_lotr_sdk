openapi: 3.0.1
info:
  title: Rett Behrens LOTR SDK
  description: One API to rule them all - LibLab take home project - The Lord of the Rings SDK
  version: 0.1.0
servers:
  - url: https://the-one-api.dev/v2
security:
  - bearerAuth: []
paths:
  /movie:
    get:
      tags:
        - Movies
      summary: GET all movies
      description: Returns a list of all movies, including the "The Lord of the Rings" and the "The Hobbit" trilogies
      operationId: getMovies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      docs:
                        type: array
                        items:
                          $ref: '#/components/schemas/Movie'
              examples:
                movies:
                  $ref: '#/components/examples/moviesExample'
  /movie/{id}:
    get:
      tags:
        - Movies
      summary: GET one specific movie by ID
      description: Returns the specified movie
      operationId: getMovieById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      docs:
                        type: array
                        items:
                          $ref: '#/components/schemas/Movie'
              examples:
                movies:
                  $ref: '#/components/examples/movieExample'
  /movie/{id}/quote:
    get:
      tags:
        - Movies
        - Quotes
      summary: GET all quotes for one specific movie by ID
      description: Request all movie quotes for one specific movie (only working for the LotR trilogy)
      operationId: getQuotesByMovieId
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      docs:
                        type: array
                        items:
                          $ref: '#/components/schemas/Quote'
              examples:
                movies:
                  $ref: '#/components/examples/quotesExample'
  /quote:
    get:
      tags:
        - Quotes
      summary: GET all movie quotes
      description: Returns a list of all movie quotes
      operationId: getQuotes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      docs:
                        type: array
                        items:
                          $ref: '#/components/schemas/Quote'
              examples:
                movies:
                  $ref: '#/components/examples/quotesExample'
  /quote/{id}:
    get:
      tags:
        - Quotes
      summary: GET one specific quote by ID
      description: Returns the specified quote
      operationId: getQuoteById
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/Response'
                  - type: object
                    properties:
                      docs:
                        type: array
                        items:
                          $ref: '#/components/schemas/Quote'
              examples:
                movies:
                  $ref: '#/components/examples/quoteExample'
components:
  schemas:
    Response:
      type: object
      properties:
        docs:
          type: array
          items: {}
        total:
          type: number
        limit:
          type: number
        offset:
          type: number
        page:
          type: number
        pages:
          type: number
    Movie:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        runtimeInMinutes:
          type: number
        budgetInMillions:
          type: number
        boxOfficeRevenueInMillions:
          type: number
        academyAwardNominations:
          type: number
        academyAwardWins:
          type: number
        rottenTomatoesScore:
          type: number
    Quote:
      type: object
      properties:
        _id: 
          type: string
        dialog: 
          type: string
        movie: 
          type: string
        character: 
          type: string
  parameters:
    id:
      name: id
      in: path
      description: Object ID
      required: true
      schema:
        type: string
  examples:
    movieExample:
      value:
        docs:
          - _id: 5cd95395de30eff6ebccde56
            name: The Lord of the Rings Series
            runtimeInMinutes: 558
            budgetInMillions: 281
            boxOfficeRevenueInMillions: 2917
            academyAwardNominations: 30
            academyAwardWins: 17
            rottenTomatoesScore: 94
        total: 1
        limit: 1000
        offset: 0
        page: 1
        pages: 1
    moviesExample:
      value:
        docs:
          - _id: 5cd95395de30eff6ebccde56
            name: The Lord of the Rings Series
            runtimeInMinutes: 558
            budgetInMillions: 281
            boxOfficeRevenueInMillions: 2917
            academyAwardNominations: 30
            academyAwardWins: 17
            rottenTomatoesScore: 94
          - _id: 5cd95395de30eff6ebccde57
            name: The Hobbit Series
            runtimeInMinutes: 462
            budgetInMillions: 675
            boxOfficeRevenueInMillions: 2932
            academyAwardNominations: 7
            academyAwardWins: 1
            rottenTomatoesScore: 66.33333333
          - _id: 5cd95395de30eff6ebccde58
            name: The Unexpected Journey
            runtimeInMinutes: 169
            budgetInMillions: 200
            boxOfficeRevenueInMillions: 1021
            academyAwardNominations: 3
            academyAwardWins: 1
            rottenTomatoesScore: 64
          - _id: 5cd95395de30eff6ebccde59
            name: The Desolation of Smaug
            runtimeInMinutes: 161
            budgetInMillions: 217
            boxOfficeRevenueInMillions: 958.4
            academyAwardNominations: 3
            academyAwardWins: 0
            rottenTomatoesScore: 75
          - _id: 5cd95395de30eff6ebccde5a
            name: The Battle of the Five Armies
            runtimeInMinutes: 144
            budgetInMillions: 250
            boxOfficeRevenueInMillions: 956
            academyAwardNominations: 1
            academyAwardWins: 0
            rottenTomatoesScore: 60
          - _id: 5cd95395de30eff6ebccde5b
            name: The Two Towers
            runtimeInMinutes: 179
            budgetInMillions: 94
            boxOfficeRevenueInMillions: 926
            academyAwardNominations: 6
            academyAwardWins: 2
            rottenTomatoesScore: 96
          - _id: 5cd95395de30eff6ebccde5c
            name: The Fellowship of the Ring
            runtimeInMinutes: 178
            budgetInMillions: 93
            boxOfficeRevenueInMillions: 871.5
            academyAwardNominations: 13
            academyAwardWins: 4
            rottenTomatoesScore: 91
          - _id: 5cd95395de30eff6ebccde5d
            name: The Return of the King
            runtimeInMinutes: 201
            budgetInMillions: 94
            boxOfficeRevenueInMillions: 1120
            academyAwardNominations: 11
            academyAwardWins: 11
            rottenTomatoesScore: 95
        total: 8
        limit: 1000
        offset: 0
        page: 1
        pages: 1
    quoteExample:
      value:
        docs:
          - _id: 5cd96e05de30eff6ebcce7ee
            dialog: Because', it's my birthday and I wants it.
            movie: 5cd95395de30eff6ebccde5d
            character: 5cd99d4bde30eff6ebccfe9e
        total: 1
        limit: 1000
        offset: 0
        page: 1
        pages: 1
    quotesExample:
      value:
        docs:
          - _id: 5cd96e05de30eff6ebcce7e9
            dialog: Deagol!
            movie: 5cd95395de30eff6ebccde5d
            character: 5cd99d4bde30eff6ebccfe9e
          - _id: 5cd96e05de30eff6ebcce7ec
            dialog: Give us that! Deagol my love
            movie: 5cd95395de30eff6ebccde5d
            character: 5cd99d4bde30eff6ebccfe9e
          - _id: 5cd96e05de30eff6ebcce7ed
            dialog: Why?
            movie: 5cd95395de30eff6ebccde5d
            character: 5cd99d4bde30eff6ebccfca7
          - _id: 5cd96e05de30eff6ebcce7ee
            dialog: Because', it's my birthday and I wants it.
            movie: 5cd95395de30eff6ebccde5d
            character: 5cd99d4bde30eff6ebccfe9e
        total: 2384
        limit: 1000
        offset: 0
        page: 1
        pages: 3
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      